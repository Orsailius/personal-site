var p=Object.defineProperty;var m=(n,i,e)=>i in n?p(n,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[i]=e;var r=(n,i,e)=>(m(n,typeof i!="symbol"?i+"":i,e),e);import{p as g}from"./MovingPlatform.57782d40.js";const o=[{id:0,image:"/images/aipaint/woman-6991826_640.png",colouredImages:["/images/aipaint/Woman0.png","/images/aipaint/Woman1.png","/images/aipaint/Woman2.png","/images/aipaint/Woman3.png","/images/aipaint/Woman4.png","/images/aipaint/Woman5.png"]},{id:1,image:"/images/aipaint/sunflower-2507845_640.png",colouredImages:["/images/aipaint/Sunflower0.png","/images/aipaint/Sunflower1.png","/images/aipaint/Sunflower2.png","/images/aipaint/Sunflower3.png","/images/aipaint/Sunflower4.png","/images/aipaint/Sunflower5.png"]},{id:2,image:"/images/aipaint/griffin-4018762_640.jpg",colouredImages:["/images/aipaint/Griffin0.png","/images/aipaint/Griffin1.png","/images/aipaint/Griffin2.png","/images/aipaint/Griffin3.png","/images/aipaint/Griffin4.png","/images/aipaint/Griffin5.png"]},{id:3,image:"/images/aipaint/vortex-5273023_640.jpg",colouredImages:["/images/aipaint/Vortex0.png","/images/aipaint/Vortex1.png","/images/aipaint/Vortex2.png","/images/aipaint/Vortex3.png","/images/aipaint/Vortex4.png","/images/aipaint/Vortex5.png"]},{id:4,image:"/images/aipaint/female-eye-7517981_640.png",colouredImages:["/images/aipaint/Eye0.png","/images/aipaint/Eye1.png","/images/aipaint/Eye2.png","/images/aipaint/Eye3.png","/images/aipaint/Eye4.png","/images/aipaint/Eye5.png"]},{id:5,image:"/images/aipaint/art-nouveau-5310890_640.png",colouredImages:["/images/aipaint/Peacocks0.png","/images/aipaint/Peacocks1.png","/images/aipaint/Peacocks2.png","/images/aipaint/Peacocks3.png","/images/aipaint/Peacocks4.png","/images/aipaint/Peacocks5.png"]}];class d extends g.Scene{constructor(){super(...arguments);r(this,"brushId",5);r(this,"imageId",0);r(this,"layers",[]);r(this,"lineDrawing");r(this,"needsUpdate",!1)}preload(){this.load.image("brush","/images/aipaint/brush1.png");let e=o[this.imageId];this.load.image(this.imageId+"lineart",e.image),console.log("loading "+this.imageId+"lineart");for(var a=0;a<6;a++)this.load.image(this.imageId+"coloured"+a,e.colouredImages[a])}loadLineArt(){const e=this.imageId+"lineart";this.load.image(e,o[this.imageId].image),this.load.once(Phaser.Loader.Events.COMPLETE,()=>{this.lineDrawing.setTexture(e)}),this.load.start()}loadColouredArt(){for(var e=0;e<6;e++){const a=this,t=a.imageId+"coloured"+e;a.load.image(t,o[a.imageId].colouredImages[e]),a.load.once(Phaser.Loader.Events.COMPLETE,()=>{if(a.layers[e]!=null){if(a.layers[e].colouredImage==null){let s=a.layers[e].colouredImage=this.add.image(400,400,this.imageId+"coloured"+e);s.displayWidth=800,s.displayHeight=800,s.setMask(a.layers[e].mask),s.depth=e}a.layers[e].colouredImage.setTexture(t)}}),a.load.start()}}createImages(){for(var e=0;e<6;e++){let a=this.add.renderTexture(400,400,800,800);a.setBlendMode(g.BlendModes.MULTIPLY);let t=a.createBitmapMask(),s=this.add.image(400,400,this.imageId+"coloured"+e);s.displayWidth=800,s.displayHeight=800,s.setMask(t),s.depth=e,this.layers.push({renderTexture:a,mask:t,colouredImage:s})}this.lineDrawing=this.add.image(400,400,this.imageId+"lineart"),this.lineDrawing.depth=-1,this.lineDrawing.displayWidth=800,this.lineDrawing.displayHeight=800}create(){this.createImages(),this.input.on("pointermove",e=>{if(e.isDown)for(var a=0;a<6;a++)a!=this.brushId||this.layers[this.brushId].renderTexture.draw("brush",e.x-32,e.y-32)},this)}setBrush(e){this.brushId=e;for(var a=0;a<6;a++)a!=e&&(this.layers[a].renderTexture.active=!1);console.log("Brush Id is now: "+this.brushId)}setImage(e){this.imageId=e,this.loadLineArt(),this.loadColouredArt()}clear(){for(var e=0;e<6;e++){let a=this.layers[e];a.renderTexture.destroy(),a.mask.destroy();let t=this.add.renderTexture(400,400,800,800);t.setBlendMode(g.BlendModes.MULTIPLY);let s=t.createBitmapMask();a.colouredImage.setMask(s),a.mask=s,a.renderTexture=t}}update(){}}function l(){return new d}const u={type:Phaser.AUTO,width:800,height:800,parent:"phaser",scene:[l()],physics:{default:"arcade"},render:{pixelArt:!1,antialias:!0},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,fullscreenTarget:"app",expandParent:!1},mipmapFilter:"LINEAR_MIPMAP_LINEAR"};class f extends Phaser.Game{constructor(i){super(i)}setBrush(i){this.scene.scenes[0].setBrush(i)}setImage(i){this.scene.scenes[0].setImage(i)}clear(){this.scene.scenes[0].clear()}}export{f as Game,u as GameConfig};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
