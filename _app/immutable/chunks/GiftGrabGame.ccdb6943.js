var r=Object.defineProperty;var l=(s,i,t)=>i in s?r(s,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[i]=t;var e=(s,i,t)=>(l(s,typeof i!="symbol"?i+"":i,t),t);import{p as h,T as o}from"./MovingPlatform.57782d40.js";class p extends h.Scene{constructor(){super(...arguments);e(this,"platforms");e(this,"player");e(this,"isClicking",!1);e(this,"swipeDirection");e(this,"gifts",[]);e(this,"coals",[]);e(this,"candy");e(this,"score",0);e(this,"lives",10);e(this,"scoreText");e(this,"livesText");e(this,"giftChance",.9);e(this,"ticksPerSpawn",4);e(this,"currentTick",0);e(this,"totalSpawns",0);e(this,"spawnTimer");e(this,"doneGame",!1);e(this,"gameOver");e(this,"gameOverText");e(this,"restartButton")}preload(){this.load.image("santa","/images/giftgrab/Santa.png"),this.load.image("ground","/images/giftgrab/platform.png"),this.load.image("platform","/images/giftgrab/platform2.png"),this.load.image("gift-red","/images/giftgrab/RedGift.png"),this.load.image("gift-orange","/images/giftgrab/OrangeGift.png"),this.load.image("gift-yellow","/images/giftgrab/YellowGift.png"),this.load.image("gift-green","/images/giftgrab/GreenGift.png"),this.load.image("gift-blue","/images/giftgrab/BlueGift.png"),this.load.image("gift-purple","/images/giftgrab/PurpleGift.png"),this.load.image("coal","/images/giftgrab/Coal.png"),this.load.image("backdrop","/images/giftgrab/Backdrop.jpg")}create(){this.player=this.physics.add.sprite(100,450,"santa"),this.player.setBounce(.2),this.player.setCollideWorldBounds(!0),this.player.body.setGravityY(600),this.player.displayWidth=100,this.player.displayHeight=100,this.platforms=this.physics.add.staticGroup(),this.platforms.create(400,875,"ground").setScale(2).refreshBody(),this.platforms.create(400,575,"platform").setScale(.5).refreshBody(),this.platforms.create(20,675,"platform").setScale(.5).refreshBody(),this.platforms.create(780,675,"platform").setScale(.5).refreshBody(),this.spawnTimer=this.time.addEvent({delay:400,callback:this.spawnObject,callbackScope:this,loop:!0}),this.physics.add.collider(this.player,this.platforms),this.scoreText=this.add.text(10,0,"Score:",{fontSize:"60px",fontFamily:"Helvetica"}),this.scoreText.depth=100,this.livesText=this.add.text(600,0,"Lives:",{fontSize:"60px",fontFamily:"Helvetica"}),this.livesText.depth=100,this.refreshLives();let t=this.add.image(400,400,"backdrop");t.depth=-1,t.displayWidth=800,t.displayHeight=1200,this.gameOver=this.add.rectangle(400,400,800,1200,0),this.gameOver.depth=2,this.gameOver.setVisible(!1),this.gameOverText=this.add.text(200,400,"Game Over",{fontSize:"72px",fontFamily:"Helvetica"}),this.gameOverText.setVisible(!1),this.gameOverText.depth=2,this.restartButton=new o(this,200,500,"Restart!",{fill:"#0f0",fontSize:"62px"},()=>this.restart()),this.restartButton.depth=2,this.add.existing(this.restartButton),this.restartButton.setVisible(!1)}restart(){this.score=0,this.scoreText.setText("Score: "+this.score),this.lives=10,this.refreshLives(),this.giftChance=.9,this.totalSpawns=0,this.ticksPerSpawn=4,this.currentTick=0,this.doneGame=!1,this.gameOver.setVisible(!1),this.gameOverText.setVisible(!1),this.restartButton.setVisible(!1)}spawnObject(){this.doneGame||(this.currentTick++,this.currentTick>=this.ticksPerSpawn&&(Math.random()<this.giftChance||this.totalSpawns<3?this.spawnGift():this.spawnCoal(),this.currentTick=0,this.totalSpawns++,this.totalSpawns==10?this.ticksPerSpawn=3:this.totalSpawns==25?this.ticksPerSpawn=2:this.totalSpawns==75?this.ticksPerSpawn=1:this.totalSpawns>200&&(this.giftChance=Math.exp(this.totalSpawns*-.0048+.748243)-.0327)))}spawnCoal(){let t=this.physics.add.sprite(Phaser.Math.FloatBetween(10,790),0,"coal");t.setBounce(.2),t.setCollideWorldBounds(!0),t.body.setGravityY(300),t.displayWidth=80,t.displayHeight=80,this.time.addEvent({delay:6e3,callback:()=>{t!=null&&(this.coals.splice(this.coals.indexOf(t),1),t.destroy())},callbackScope:t,loop:!1}),this.physics.add.collider(t,this.platforms),this.physics.add.overlap(this.player,t,this.collectCoal,void 0,this),this.coals.push(t)}spawnGift(){let t=this.physics.add.sprite(Phaser.Math.FloatBetween(10,790),0,this.getRandomGift());t.setBounce(.2),t.setCollideWorldBounds(!0),t.body.setGravityY(300),t.displayWidth=80,t.displayHeight=80,this.time.addEvent({delay:7e3,callback:()=>{t!=null&&(this.gifts.splice(this.gifts.indexOf(t),1),t.destroy())},callbackScope:t,loop:!1}),this.physics.add.collider(t,this.platforms),this.physics.add.overlap(this.player,t,this.collectGift,void 0,this),this.gifts.push(t)}getRandomGift(){var t=Phaser.Math.FloatBetween(0,1);return t<1/6?"gift-red":t<2/6?"gift-orange":t<3/6?"gift-yellow":t<4/6?"gift-green":t<5/6?"gift-blue":"gift-purple"}collectGift(t,a){this.gifts.splice(this.gifts.indexOf(a),1),a.destroy(),this.giveScore(1)}collectCoal(t,a){this.coals.splice(this.gifts.indexOf(a),1),a.destroy(),this.takeLives(1)}update(){if(!this.doneGame){if(!this.input.activePointer.isDown&&this.isClicking==!0)this.player.setVelocityX(0),this.isClicking=!1;else if(this.input.activePointer.isDown){this.isClicking=!0;let t=this.input.activePointer.position.x;if(this.player.x<t?(this.player.setVelocityX(160),this.player.flipX=!1):this.player.x>t&&(this.player.setVelocityX(-160),this.player.flipX=!0),this.player.body.touching.down){let a=this.input.activePointer.position.y;this.player.y>a+50&&this.player.setVelocityY(-530)}}}}giveScore(t){this.score+=t,this.scoreText.setText("Score: "+this.score)}takeLives(t){this.lives-=t,this.refreshLives(),this.lives==0&&(this.doneGame=!0,this.gameOver.setVisible(!0),this.gameOverText.setVisible(!0),this.restartButton.setVisible(!0))}refreshLives(){this.livesText.setText("Lives: "+this.lives),this.livesText.x=790-this.livesText.width}}function n(){return new p}const f={type:Phaser.AUTO,width:800,height:900,parent:"phaser",scene:[n()],physics:{default:"arcade"},render:{pixelArt:!1,antialias:!0},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,fullscreenTarget:"app",expandParent:!1},mipmapFilter:"LINEAR_MIPMAP_LINEAR"};class g extends Phaser.Game{constructor(i){super(i)}}export{g as Game,f as GameConfig};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
