import{S as k,i as D,s as F,C as G,E as H,F as I,G as z,g as B,d as J,o as K,an as N,H as P,a7 as R}from"./index.db517901.js";import{w as E}from"./index.1757424e.js";var a;(function(e){e.string="string",e.array="array",e.object="object",e.mediaQueryList="mediaQueryList"})(a||(a={}));const y=e=>e instanceof Object&&typeof e.addListener=="function"&&typeof e.removeListener=="function"?a.mediaQueryList:Array.isArray(e)?a.array:e instanceof Object?a.object:a.string;class d{static get(t){return t.media?t.matches:!1}static inline(t){return d.get(t)}static array(t){return t.map(s=>L(s))}static object(t){const s={};for(const r in t)s[r]=L(t[r]);return s}}function L(e){const t=y(e);if(t===a.mediaQueryList)return d.inline(e);if(t===a.array)return d.array(e);if(t===a.object)return d.object(e)}class b{static get(t){return window.matchMedia(t)}static inline(t){return b.get(t)}static array(t){return t.map(s=>A(s))}static object(t){const s={};for(const r in t)s[r]=A(t[r]);return s}}function A(e){const t=y(e);if(t===a.string)return b.inline(e);if(t===a.array)return b.array(e);if(t===a.object)return b.object(e)}var u;(function(e){e.add="addEventListener",e.remove="removeEventListener"})(u||(u={}));class j{static inline(t,s=()=>{},r=u.add){t&&t[r]&&t[r]("change",s)}static array(t,s=()=>{},r=u.add){t.flat(1/0).forEach(n=>_(n,s,r))}static object(t,s=()=>{},r=u.add){for(const n in t)_(t[n],s,r)}}function _(e,t=()=>{},s=u.add){const r=y(e);if(r===a.mediaQueryList)return j.inline(e,t,s);if(r===a.array)return j.array(e,t,s);if(r===a.object)return j.object(e,t,s)}function U(e){if(typeof window>"u")return{...E(void 0),destroy:()=>{}};const{subscribe:t,set:s}=E(void 0),r=A(e),n=()=>s(L(r));return n(),_(r,n),{subscribe:t,destroy(){_(r,n,u.remove)}}}const V=e=>({matches:e&1,matchesArray:e&2}),O=e=>({matches:e[0],matchesArray:e[1]});function W(e){let t;const s=e[7].default,r=G(s,e,e[6],O);return{c(){r&&r.c()},l(n){r&&r.l(n)},m(n,f){r&&r.m(n,f),t=!0},p(n,[f]){r&&r.p&&(!t||f&67)&&H(r,s,n,n[6],t?z(s,n[6],f,V):I(n[6]),O)},i(n){t||(B(r,n),t=!0)},o(n){J(r,n),t=!1},d(n){r&&r.d(n)}}}const X=U;function Y(e,t,s){let r,n=P,f=()=>(n(),n=R(o,c=>s(5,r=c)),o);e.$$.on_destroy.push(()=>n());let{$$slots:C={},$$scope:M}=t,{query:i=""}=t,{matches:m=!1}=t,{matchesArray:h=[]}=t,{matchesObject:l={}}=t,o;const g=(...c)=>{i?(s(1,h=Array.isArray(r)?r:[]),s(3,l=y(r)===a.object?r:{}),s(0,m=r??(y(i)===a.array?[]:y(i)===a.object?{}:!1))):(s(0,m=!1),s(1,h=[]))},Q=()=>{f(s(2,o=X(i))),g()},w=()=>{g(),o==null||o.destroy},S=(...c)=>{w(),i&&Q()};return K(()=>{Q()}),N(()=>{w()}),e.$$set=c=>{"query"in c&&s(4,i=c.query),"matches"in c&&s(0,m=c.matches),"matchesArray"in c&&s(1,h=c.matchesArray),"matchesObject"in c&&s(3,l=c.matchesObject),"$$scope"in c&&s(6,M=c.$$scope)},e.$$.update=()=>{e.$$.dirty&16&&S(i),e.$$.dirty&32&&g(r)},[m,h,o,l,i,r,M,C]}class T extends k{constructor(t){super(),D(this,t,Y,W,F,{query:4,matches:0,matchesArray:1,matchesObject:3})}}export{T as M};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
