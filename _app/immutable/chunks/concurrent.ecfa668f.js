import{w as c}from"./writeEffect.b602d25b.js";import{a as d}from"./animationSetup.5bd92091.js";const u=(t,s)=>s.text.length-t.text.length,a=t=>t.sort(u)[0].currentNode,l=(t,s)=>{new MutationObserver(r=>{r.forEach(o=>{const n=o.type==="attributes",i=o.target.classList.contains("finished-typing");n&&i&&s()})}).observe(t,{attributes:!0,childList:!0,subtree:!0})},m=(t,s)=>{const{options:e,elements:r}=d(t,s),o=a(r);l(o,()=>e.dispatch("done"));for(const n of r)c(n,e).then(()=>{e.keepCursorOnFinish?n.currentNode!==o?n.currentNode.classList.replace("typing","finished-typing"):e.dispatch("done"):n.currentNode.classList.replace("typing","finished-typing"),typeof e.keepCursorOnFinish=="number"&&setTimeout(()=>{n.currentNode.classList.replace("typing","finished-typing")},e.keepCursorOnFinish)});return{update(){},destroy(){}}};export{m as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uY3VycmVudC5lY2ZhNjY4Zi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N2ZWx0ZS10eXBld3JpdGVyL3BhY2thZ2UvaGVscGVycy9nZXRMb25nZXN0VGV4dEVsZW1lbnQuanMiLCIuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3ZlbHRlLXR5cGV3cml0ZXIvcGFja2FnZS9oZWxwZXJzL29uQW5pbWF0aW9uRW5kLmpzIiwiLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N2ZWx0ZS10eXBld3JpdGVyL3BhY2thZ2UvbW9kZXMvY29uY3VycmVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQHR5cGUge2ltcG9ydCh0eXBlcycpLkRlc2NlbmRpbmdTb3J0RnVuY3Rpb259ICovXG5jb25zdCBkZXNjZW5kaW5nU29ydEZ1bmN0aW9uID0gKGZpcnN0RWxlbWVudCwgc2Vjb25kRWxlbWVudCkgPT5cblx0c2Vjb25kRWxlbWVudC50ZXh0Lmxlbmd0aCAtIGZpcnN0RWxlbWVudC50ZXh0Lmxlbmd0aFxuXG4vKiogQHR5cGUge2ltcG9ydCh0eXBlcycpLkdldExvbmdlc3RUZXh0RWxlbWVudH0gKi9cbmNvbnN0IGdldExvbmdlc3RUZXh0RWxlbWVudCA9IGVsZW1lbnRzID0+IHtcblx0Y29uc3QgZGVzY2VuZGluZ1RleHRMZW5ndGhPcmRlciA9IGVsZW1lbnRzLnNvcnQoZGVzY2VuZGluZ1NvcnRGdW5jdGlvbilcblx0Y29uc3QgbG9uZ2VzdFRleHRFbGVtZW50ID0gZGVzY2VuZGluZ1RleHRMZW5ndGhPcmRlclswXS5jdXJyZW50Tm9kZVxuXHRyZXR1cm4gbG9uZ2VzdFRleHRFbGVtZW50XG59XG5cbmV4cG9ydCB7IGdldExvbmdlc3RUZXh0RWxlbWVudCB9XG4iLCIvKiogQHR5cGUge2ltcG9ydCh0eXBlcycpLk9uQW5pbWF0aW9uRW5kfSAqL1xuY29uc3Qgb25BbmltYXRpb25FbmQgPSAoZWxlbWVudCwgY2FsbGJhY2spID0+IHtcblx0Y29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihtdXRhdGlvbnMgPT4ge1xuXHRcdG11dGF0aW9ucy5mb3JFYWNoKG11dGF0aW9uID0+IHtcblx0XHRcdGNvbnN0IGVsZW1lbnRBdHRyaWJ1dGVDaGFuZ2VkID0gbXV0YXRpb24udHlwZSA9PT0gJ2F0dHJpYnV0ZXMnXG5cdFx0XHRjb25zdCBlbGVtZW50RmluaXNoZWRUeXBpbmcgPSBtdXRhdGlvbi50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdmaW5pc2hlZC10eXBpbmcnKVxuXHRcdFx0aWYgKGVsZW1lbnRBdHRyaWJ1dGVDaGFuZ2VkICYmIGVsZW1lbnRGaW5pc2hlZFR5cGluZykgY2FsbGJhY2soKVxuXHRcdH0pXG5cdH0pXG5cblx0b2JzZXJ2ZXIub2JzZXJ2ZShlbGVtZW50LCB7XG5cdFx0YXR0cmlidXRlczogdHJ1ZSxcblx0XHRjaGlsZExpc3Q6IHRydWUsXG5cdFx0c3VidHJlZTogdHJ1ZVxuXHR9KVxufVxuXG5leHBvcnQgeyBvbkFuaW1hdGlvbkVuZCB9XG4iLCJpbXBvcnQgeyBnZXRMb25nZXN0VGV4dEVsZW1lbnQgfSBmcm9tICcuLi9oZWxwZXJzL2dldExvbmdlc3RUZXh0RWxlbWVudCdcbmltcG9ydCB7IHdyaXRlRWZmZWN0IH0gZnJvbSAnLi4vaGVscGVycy93cml0ZUVmZmVjdCdcbmltcG9ydCB7IG9uQW5pbWF0aW9uRW5kIH0gZnJvbSAnLi4vaGVscGVycy9vbkFuaW1hdGlvbkVuZCdcbmltcG9ydCB7IGFuaW1hdGlvblNldHVwIH0gZnJvbSAnLi4vaGVscGVycy9hbmltYXRpb25TZXR1cCdcblxuLy8gdGhlIG5hbWUgXCJkZWZhdWx0XCIgY2Fubm90IGJlIHVzZWQgZHVlIHRvIGJlaW5nIGEganMga2V5d29yZFxuXG4vKipcbiAqIEB0eXBlZGVmIHtvYmplY3R9IFByb3BzXG4gKiBAcHJvcGVydHkge251bWJlcn0gW2ludGVydmFsXVxuICogQHByb3BlcnR5IHtib29sZWFufSBbY3Vyc29yXVxuICogQHByb3BlcnR5IHtib29sZWFufSBba2VlcEN1cnNvck9uRmluaXNoXVxuICogQHByb3BlcnR5IHtudW1iZXJ9IFtkZWxheV1cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gW3Nob3dDdXJzb3JPbkRlbGF5XVxuICogQHByb3BlcnR5IHtib29sZWFufSBbZGlzYWJsZWRdXG4gKiBAcHJvcGVydHkge3N0cmluZ30gW2VsZW1lbnRdXG4gKiBAcHJvcGVydHkge251bWJlcn0gW3NjcmFtYmxlRHVyYXRpb25dXG4gKiBAcHJvcGVydHkge251bWJlcn0gW3NjcmFtYmxlU2xvd2Rvd25dXG4gKiBAcHJvcGVydHkge251bWJlcn0gW3Vud3JpdGVJbnRlcnZhbF1cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbd29yZEludGVydmFsXVxuICovXG5cbi8qKlxuICogQHR5cGVkZWYge3sgdXBkYXRlOiAoKSA9PiB2b2lkLCBkZXN0cm95OiAoKSA9PiB2b2lkIH19IFN2ZWx0ZUFjdGlvblJldHVyblR5cGVcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHsobm9kZTogSFRNTEVsZW1lbnQsIHByb3BzOiBQcm9wcykgPT4gU3ZlbHRlQWN0aW9uUmV0dXJuVHlwZX0gVHlwZXdyaXRlck1vZGVGblxuICovXG5cbi8qKlxuICogQHR5cGUge1R5cGV3cml0ZXJNb2RlRm59XG4gKi9cbmNvbnN0IGNvbmN1cnJlbnQgPSAobm9kZSwgcHJvcHMpID0+IHtcblx0Y29uc3QgeyBvcHRpb25zLCBlbGVtZW50cyB9ID0gYW5pbWF0aW9uU2V0dXAobm9kZSwgcHJvcHMpXG5cblx0Y29uc3QgbGFzdEVsZW1lbnRUb0ZpbmlzaCA9IGdldExvbmdlc3RUZXh0RWxlbWVudChlbGVtZW50cylcblx0b25BbmltYXRpb25FbmQobGFzdEVsZW1lbnRUb0ZpbmlzaCwgKCkgPT4gb3B0aW9ucy5kaXNwYXRjaCgnZG9uZScpKVxuXG5cdGZvciAoY29uc3QgZWxlbWVudCBvZiBlbGVtZW50cykge1xuXHRcdC8vIFwidGhlblwiIGlzIHJlcXVpcmVkIGhlcmUgdG8gcHJldmVudCBibG9ja2luZyBleGVjdXRpb24sIHRodXMga2VlcGluZ1xuXHRcdC8vIHRoZSBhbmltYXRpb24gYXN5bmNocm9ub3VzXG5cdFx0d3JpdGVFZmZlY3QoZWxlbWVudCwgb3B0aW9ucykudGhlbigoKSA9PiB7XG5cdFx0XHRpZiAob3B0aW9ucy5rZWVwQ3Vyc29yT25GaW5pc2gpIHtcblx0XHRcdFx0Y29uc3QgaXNOb3RMb25nZXN0RWxlbWVudCA9IGVsZW1lbnQuY3VycmVudE5vZGUgIT09IGxhc3RFbGVtZW50VG9GaW5pc2hcblx0XHRcdFx0aXNOb3RMb25nZXN0RWxlbWVudFxuXHRcdFx0XHRcdD8gZWxlbWVudC5jdXJyZW50Tm9kZS5jbGFzc0xpc3QucmVwbGFjZSgndHlwaW5nJywgJ2ZpbmlzaGVkLXR5cGluZycpXG5cdFx0XHRcdFx0OiBvcHRpb25zLmRpc3BhdGNoKCdkb25lJylcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1lbnQuY3VycmVudE5vZGUuY2xhc3NMaXN0LnJlcGxhY2UoJ3R5cGluZycsICdmaW5pc2hlZC10eXBpbmcnKVxuXHRcdFx0fVxuXG5cdFx0XHRjb25zdCBjdXJzb3JIYXNUaW1lb3V0ID0gdHlwZW9mIG9wdGlvbnMua2VlcEN1cnNvck9uRmluaXNoID09PSAnbnVtYmVyJ1xuXHRcdFx0Y3Vyc29ySGFzVGltZW91dCAmJlxuXHRcdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcblx0XHRcdFx0XHRlbGVtZW50LmN1cnJlbnROb2RlLmNsYXNzTGlzdC5yZXBsYWNlKCd0eXBpbmcnLCAnZmluaXNoZWQtdHlwaW5nJylcblx0XHRcdFx0fSwgb3B0aW9ucy5rZWVwQ3Vyc29yT25GaW5pc2gpXG5cdFx0fSlcblx0fVxuXG5cdHJldHVybiB7XG5cdFx0dXBkYXRlKCkge30sXG5cdFx0ZGVzdHJveSgpIHt9XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY29uY3VycmVudFxuIl0sIm5hbWVzIjpbImRlc2NlbmRpbmdTb3J0RnVuY3Rpb24iLCJmaXJzdEVsZW1lbnQiLCJzZWNvbmRFbGVtZW50IiwiZ2V0TG9uZ2VzdFRleHRFbGVtZW50IiwiZWxlbWVudHMiLCJvbkFuaW1hdGlvbkVuZCIsImVsZW1lbnQiLCJjYWxsYmFjayIsIm11dGF0aW9ucyIsIm11dGF0aW9uIiwiZWxlbWVudEF0dHJpYnV0ZUNoYW5nZWQiLCJlbGVtZW50RmluaXNoZWRUeXBpbmciLCJjb25jdXJyZW50Iiwibm9kZSIsInByb3BzIiwib3B0aW9ucyIsImFuaW1hdGlvblNldHVwIiwibGFzdEVsZW1lbnRUb0ZpbmlzaCIsIndyaXRlRWZmZWN0Il0sIm1hcHBpbmdzIjoiK0ZBQ0EsTUFBTUEsRUFBeUIsQ0FBQ0MsRUFBY0MsSUFDN0NBLEVBQWMsS0FBSyxPQUFTRCxFQUFhLEtBQUssT0FHekNFLEVBQXdCQyxHQUNLQSxFQUFTLEtBQUtKLENBQXNCLEVBQ2pCLENBQUMsRUFBRSxZQ05uREssRUFBaUIsQ0FBQ0MsRUFBU0MsSUFBYSxDQUM1QixJQUFJLGlCQUFpQkMsR0FBYSxDQUNsREEsRUFBVSxRQUFRQyxHQUFZLENBQzdCLE1BQU1DLEVBQTBCRCxFQUFTLE9BQVMsYUFDNUNFLEVBQXdCRixFQUFTLE9BQU8sVUFBVSxTQUFTLGlCQUFpQixFQUM5RUMsR0FBMkJDLEdBQXVCSixFQUFVLENBQ25FLENBQUcsQ0FDSCxDQUFFLEVBRVEsUUFBUUQsRUFBUyxDQUN6QixXQUFZLEdBQ1osVUFBVyxHQUNYLFFBQVMsRUFDWCxDQUFFLENBQ0YsRUNrQk1NLEVBQWEsQ0FBQ0MsRUFBTUMsSUFBVSxDQUNuQyxLQUFNLENBQUUsUUFBQUMsRUFBUyxTQUFBWCxDQUFRLEVBQUtZLEVBQWVILEVBQU1DLENBQUssRUFFbERHLEVBQXNCZCxFQUFzQkMsQ0FBUSxFQUMxREMsRUFBZVksRUFBcUIsSUFBTUYsRUFBUSxTQUFTLE1BQU0sQ0FBQyxFQUVsRSxVQUFXVCxLQUFXRixFQUdyQmMsRUFBWVosRUFBU1MsQ0FBTyxFQUFFLEtBQUssSUFBTSxDQUNwQ0EsRUFBUSxtQkFDaUJULEVBQVEsY0FBZ0JXLEVBRWpEWCxFQUFRLFlBQVksVUFBVSxRQUFRLFNBQVUsaUJBQWlCLEVBQ2pFUyxFQUFRLFNBQVMsTUFBTSxFQUUxQlQsRUFBUSxZQUFZLFVBQVUsUUFBUSxTQUFVLGlCQUFpQixFQUd6QyxPQUFPUyxFQUFRLG9CQUF1QixVQUU5RCxXQUFXLElBQU0sQ0FDaEJULEVBQVEsWUFBWSxVQUFVLFFBQVEsU0FBVSxpQkFBaUIsQ0FDdEUsRUFBT1MsRUFBUSxrQkFBa0IsQ0FDakMsQ0FBRyxFQUdGLE1BQU8sQ0FDTixRQUFTLENBQUUsRUFDWCxTQUFVLENBQUUsQ0FDWixDQUNGIiwieF9nb29nbGVfaWdub3JlTGlzdCI6WzAsMSwyXX0=
