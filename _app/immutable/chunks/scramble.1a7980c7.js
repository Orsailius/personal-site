import{r as m,a as f,b as g,s as R}from"./animationSetup.aa89d0fb.js";const y=(s,o)=>{const e=o/3;return s.map(()=>m(e,o-100))},D=()=>{const s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),o=s.length,e=m(0,o);return s[e]},P=async(s,o)=>{const{options:e,elements:a}=f(s,o),c=e.scrambleDuration;return await new Promise(L=>{a.forEach(async({currentNode:r,text:i})=>{let n=i.split("");const p=y(n,c),l=Date.now();for(g(r,e.parentElement,t=>{t.classList.add("finished-typing")});Date.now()-l<c;){const t=m(0,n.length),h=p[t],T=n[t]===" ",d=()=>Date.now()-l;if((()=>d()>=h)()||T)if(!(n[t]===i[t]))n[t]=i[t];else continue;else n[t]=D();const u=n.join("");r.innerHTML=u;const w=u===i,b=e.scrambleSlowdown?Math.round(d()/100):1;if(await R(b),w){L();break}}r.innerHTML=i})}),e.dispatch("done"),{update(){},destroy(){}}};export{P as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyYW1ibGUuMWE3OTgwYzcuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdmVsdGUtdHlwZXdyaXRlci9wYWNrYWdlL2hlbHBlcnMvZ2V0TGV0dGVyc1RpbWVvdXQuanMiLCIuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3ZlbHRlLXR5cGV3cml0ZXIvcGFja2FnZS9oZWxwZXJzL2dldFJhbmRvbUxldHRlci5qcyIsIi4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdmVsdGUtdHlwZXdyaXRlci9wYWNrYWdlL21vZGVzL3NjcmFtYmxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJuZyB9IGZyb20gJy4vcm5nJ1xuXG4vLyByZXR1cm5zIGEgYXJyYXkgd2l0aCBhIHRpbWVvdXQgKGluIG1zKSBmb3IgZWFjaCBsZXR0ZXIgb2YgdGhlIHdvcmRcbmV4cG9ydCBjb25zdCBnZXRMZXR0ZXJzVGltZW91dCA9ICh0ZXh0TGV0dGVycywgdGltZW91dCkgPT4ge1xuXHRjb25zdCBtaW5pbXVtVGltZW91dFBvc3NpYmxlID0gdGltZW91dCAvIDNcblx0Ly8gVE9ETzogZmluZCBhIGJldHRlciB3YXkgdG8gZGVhbCB3aXRoIHRoaXMgaW5zdGVhZCBvZiBleHBsaWNpdGx5IHJlZHVjaW5nIHRoZSBtYXhpbXVtIHRpbWVvdXRcblx0Ly8gb3RoZXJ3aXNlLCBhdCB0aGUgZW5kIG9mIHRoZSBhbmltYXRpb24sIG9uZSBvciB0d28gY2hhcmFjdGVycyByZW1haW4gc2NyYW1ibGVkXG5cdGNvbnN0IGxldHRlcnNUaW1lb3V0ID0gdGV4dExldHRlcnMubWFwKCgpID0+IHJuZyhtaW5pbXVtVGltZW91dFBvc3NpYmxlLCB0aW1lb3V0IC0gMTAwKSlcblx0cmV0dXJuIGxldHRlcnNUaW1lb3V0XG59XG4iLCJpbXBvcnQgeyBybmcgfSBmcm9tICcuL3JuZydcblxuZXhwb3J0IGNvbnN0IGdldFJhbmRvbUxldHRlciA9ICgpID0+IHtcblx0Y29uc3QgcG9zc2libGVMZXR0ZXJzID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Jy5zcGxpdChcblx0XHQnJ1xuXHQpXG5cdGNvbnN0IGxldHRlckluZGV4TGltaXQgPSBwb3NzaWJsZUxldHRlcnMubGVuZ3RoXG5cdGNvbnN0IHJhbmRvbUxldHRlckluZGV4ID0gcm5nKDAsIGxldHRlckluZGV4TGltaXQpXG5cdGNvbnN0IHJhbmRvbUxldHRlciA9IHBvc3NpYmxlTGV0dGVyc1tyYW5kb21MZXR0ZXJJbmRleF1cblx0cmV0dXJuIHJhbmRvbUxldHRlclxufVxuIiwiaW1wb3J0IHsgZ2V0TGV0dGVyc1RpbWVvdXQgfSBmcm9tICcuLi9oZWxwZXJzL2dldExldHRlcnNUaW1lb3V0J1xuaW1wb3J0IHsgZ2V0UmFuZG9tTGV0dGVyIH0gZnJvbSAnLi4vaGVscGVycy9nZXRSYW5kb21MZXR0ZXInXG5pbXBvcnQgeyBybmcgfSBmcm9tICcuLi9oZWxwZXJzL3JuZydcbmltcG9ydCB7IHNsZWVwIH0gZnJvbSAnLi4vaGVscGVycy9zbGVlcCdcbmltcG9ydCB7IHJ1bk9uRXZlcnlQYXJlbnRVbnRpbCB9IGZyb20gJy4uL2hlbHBlcnMvcnVuT25FdmVyeVBhcmVudFVudGlsJ1xuaW1wb3J0IHsgYW5pbWF0aW9uU2V0dXAgfSBmcm9tICcuLi9oZWxwZXJzL2FuaW1hdGlvblNldHVwJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtvYmplY3R9IFByb3BzXG4gKiBAcHJvcGVydHkge251bWJlcn0gW2ludGVydmFsXVxuICogQHByb3BlcnR5IHtib29sZWFufSBbY3Vyc29yXVxuICogQHByb3BlcnR5IHtib29sZWFufSBba2VlcEN1cnNvck9uRmluaXNoXVxuICogQHByb3BlcnR5IHtudW1iZXJ9IFtkZWxheV1cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gW3Nob3dDdXJzb3JPbkRlbGF5XVxuICogQHByb3BlcnR5IHtib29sZWFufSBbZGlzYWJsZWRdXG4gKiBAcHJvcGVydHkge3N0cmluZ30gW2VsZW1lbnRdXG4gKiBAcHJvcGVydHkge251bWJlcn0gW3NjcmFtYmxlRHVyYXRpb25dXG4gKiBAcHJvcGVydHkge251bWJlcn0gW3NjcmFtYmxlU2xvd2Rvd25dXG4gKiBAcHJvcGVydHkge251bWJlcn0gW3Vud3JpdGVJbnRlcnZhbF1cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbd29yZEludGVydmFsXVxuICovXG5cbi8qKlxuICogQHR5cGVkZWYge3sgdXBkYXRlOiAoKSA9PiB2b2lkLCBkZXN0cm95OiAoKSA9PiB2b2lkIH19IFN2ZWx0ZUFjdGlvblJldHVyblR5cGVcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHsobm9kZTogSFRNTEVsZW1lbnQsIHByb3BzOiBQcm9wcykgPT4gU3ZlbHRlQWN0aW9uUmV0dXJuVHlwZX0gVHlwZXdyaXRlck1vZGVGblxuICovXG5cbi8qKlxuICogQHR5cGUge1R5cGV3cml0ZXJNb2RlRm59XG4gKi9cbmNvbnN0IHNjcmFtYmxlID0gYXN5bmMgKG5vZGUsIHByb3BzKSA9PiB7XG5cdGNvbnN0IHsgb3B0aW9ucywgZWxlbWVudHMgfSA9IGFuaW1hdGlvblNldHVwKG5vZGUsIHByb3BzKVxuXG5cdGNvbnN0IHRpbWVvdXQgPSBvcHRpb25zLnNjcmFtYmxlRHVyYXRpb25cblxuXHRhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcblx0XHRlbGVtZW50cy5mb3JFYWNoKGFzeW5jICh7IGN1cnJlbnROb2RlLCB0ZXh0IH0pID0+IHtcblx0XHRcdGxldCB3b3JkTGV0dGVycyA9IHRleHQuc3BsaXQoJycpXG5cdFx0XHRjb25zdCBsZXR0ZXJzVGltZW91dCA9IGdldExldHRlcnNUaW1lb3V0KHdvcmRMZXR0ZXJzLCB0aW1lb3V0KVxuXHRcdFx0Y29uc3Qgc3RhcnRpbmdUaW1lID0gRGF0ZS5ub3coKVxuXG5cdFx0XHRydW5PbkV2ZXJ5UGFyZW50VW50aWwoY3VycmVudE5vZGUsIG9wdGlvbnMucGFyZW50RWxlbWVudCwgZWxlbWVudCA9PiB7XG5cdFx0XHRcdGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZmluaXNoZWQtdHlwaW5nJylcblx0XHRcdH0pXG5cblx0XHRcdHdoaWxlIChEYXRlLm5vdygpIC0gc3RhcnRpbmdUaW1lIDwgdGltZW91dCkge1xuXHRcdFx0XHRjb25zdCByYW5kb21MZXR0ZXJJbmRleCA9IHJuZygwLCB3b3JkTGV0dGVycy5sZW5ndGgpXG5cdFx0XHRcdGNvbnN0IHJhbmRvbUxldHRlclRpbWVvdXQgPSBsZXR0ZXJzVGltZW91dFtyYW5kb21MZXR0ZXJJbmRleF1cblx0XHRcdFx0Y29uc3QgaXNSYW5kb21MZXR0ZXJXaGl0ZXNwYWNlID0gd29yZExldHRlcnNbcmFuZG9tTGV0dGVySW5kZXhdID09PSAnICdcblx0XHRcdFx0Y29uc3QgdGltZUVsbGFwc2VkID0gKCkgPT4gRGF0ZS5ub3coKSAtIHN0YXJ0aW5nVGltZVxuXHRcdFx0XHRjb25zdCBkaWRSYW5kb21MZXR0ZXJSZWFjaFRpbWVvdXQgPSAoKSA9PiB0aW1lRWxsYXBzZWQoKSA+PSByYW5kb21MZXR0ZXJUaW1lb3V0XG5cblx0XHRcdFx0aWYgKGRpZFJhbmRvbUxldHRlclJlYWNoVGltZW91dCgpIHx8IGlzUmFuZG9tTGV0dGVyV2hpdGVzcGFjZSkge1xuXHRcdFx0XHRcdGNvbnN0IGxldHRlckZpbmlzaGVkQW5pbWF0aW9uID1cblx0XHRcdFx0XHRcdHdvcmRMZXR0ZXJzW3JhbmRvbUxldHRlckluZGV4XSA9PT0gdGV4dFtyYW5kb21MZXR0ZXJJbmRleF1cblxuXHRcdFx0XHRcdGlmICghbGV0dGVyRmluaXNoZWRBbmltYXRpb24pXG5cdFx0XHRcdFx0XHR3b3JkTGV0dGVyc1tyYW5kb21MZXR0ZXJJbmRleF0gPSB0ZXh0W3JhbmRvbUxldHRlckluZGV4XVxuXHRcdFx0XHRcdGVsc2UgY29udGludWVcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR3b3JkTGV0dGVyc1tyYW5kb21MZXR0ZXJJbmRleF0gPSBnZXRSYW5kb21MZXR0ZXIoKVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y29uc3Qgc2NyYW1ibGVkVGV4dCA9IHdvcmRMZXR0ZXJzLmpvaW4oJycpXG5cdFx0XHRcdGN1cnJlbnROb2RlLmlubmVySFRNTCA9IHNjcmFtYmxlZFRleHRcblxuXHRcdFx0XHRjb25zdCBmaW5pc2hlZFNjcmFtYmxpbmcgPSBzY3JhbWJsZWRUZXh0ID09PSB0ZXh0XG5cblx0XHRcdFx0Y29uc3QgbGV0dGVySW50ZXJ2YWwgPSBvcHRpb25zLnNjcmFtYmxlU2xvd2Rvd25cblx0XHRcdFx0XHQ/IE1hdGgucm91bmQodGltZUVsbGFwc2VkKCkgLyAxMDApXG5cdFx0XHRcdFx0OiAxXG5cblx0XHRcdFx0YXdhaXQgc2xlZXAobGV0dGVySW50ZXJ2YWwpXG5cblx0XHRcdFx0aWYgKGZpbmlzaGVkU2NyYW1ibGluZykge1xuXHRcdFx0XHRcdHJlc29sdmUoKVxuXHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Y3VycmVudE5vZGUuaW5uZXJIVE1MID0gdGV4dFxuXHRcdH0pXG5cdH0pXG5cblx0b3B0aW9ucy5kaXNwYXRjaCgnZG9uZScpXG5cblx0cmV0dXJuIHtcblx0XHR1cGRhdGUoKSB7fSxcblx0XHRkZXN0cm95KCkge31cblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBzY3JhbWJsZVxuIl0sIm5hbWVzIjpbImdldExldHRlcnNUaW1lb3V0IiwidGV4dExldHRlcnMiLCJ0aW1lb3V0IiwibWluaW11bVRpbWVvdXRQb3NzaWJsZSIsInJuZyIsImdldFJhbmRvbUxldHRlciIsInBvc3NpYmxlTGV0dGVycyIsImxldHRlckluZGV4TGltaXQiLCJyYW5kb21MZXR0ZXJJbmRleCIsInNjcmFtYmxlIiwibm9kZSIsInByb3BzIiwib3B0aW9ucyIsImVsZW1lbnRzIiwiYW5pbWF0aW9uU2V0dXAiLCJyZXNvbHZlIiwiY3VycmVudE5vZGUiLCJ0ZXh0Iiwid29yZExldHRlcnMiLCJsZXR0ZXJzVGltZW91dCIsInN0YXJ0aW5nVGltZSIsInJ1bk9uRXZlcnlQYXJlbnRVbnRpbCIsImVsZW1lbnQiLCJyYW5kb21MZXR0ZXJUaW1lb3V0IiwiaXNSYW5kb21MZXR0ZXJXaGl0ZXNwYWNlIiwidGltZUVsbGFwc2VkIiwic2NyYW1ibGVkVGV4dCIsImZpbmlzaGVkU2NyYW1ibGluZyIsImxldHRlckludGVydmFsIiwic2xlZXAiXSwibWFwcGluZ3MiOiJzRUFHTyxNQUFNQSxFQUFvQixDQUFDQyxFQUFhQyxJQUFZLENBQzFELE1BQU1DLEVBQXlCRCxFQUFVLEVBSXpDLE9BRHVCRCxFQUFZLElBQUksSUFBTUcsRUFBSUQsRUFBd0JELEVBQVUsR0FBRyxDQUFDLENBRXhGLEVDUGFHLEVBQWtCLElBQU0sQ0FDcEMsTUFBTUMsRUFBa0IsaUVBQWlFLE1BQ3hGLEVBQ0EsRUFDS0MsRUFBbUJELEVBQWdCLE9BQ25DRSxFQUFvQkosRUFBSSxFQUFHRyxDQUFnQixFQUVqRCxPQURxQkQsRUFBZ0JFLENBQWlCLENBRXZELEVDdUJNQyxFQUFXLE1BQU9DLEVBQU1DLElBQVUsQ0FDdkMsS0FBTSxDQUFFLFFBQUFDLEVBQVMsU0FBQUMsQ0FBUSxFQUFLQyxFQUFlSixFQUFNQyxDQUFLLEVBRWxEVCxFQUFVVSxFQUFRLGlCQUV4QixhQUFNLElBQUksUUFBUUcsR0FBVyxDQUM1QkYsRUFBUyxRQUFRLE1BQU8sQ0FBRSxZQUFBRyxFQUFhLEtBQUFDLENBQUksSUFBTyxDQUNqRCxJQUFJQyxFQUFjRCxFQUFLLE1BQU0sRUFBRSxFQUMvQixNQUFNRSxFQUFpQm5CLEVBQWtCa0IsRUFBYWhCLENBQU8sRUFDdkRrQixFQUFlLEtBQUssSUFBSyxFQU0vQixJQUpBQyxFQUFzQkwsRUFBYUosRUFBUSxjQUFlVSxHQUFXLENBQ3BFQSxFQUFRLFVBQVUsSUFBSSxpQkFBaUIsQ0FDM0MsQ0FBSSxFQUVNLEtBQUssTUFBUUYsRUFBZWxCLEdBQVMsQ0FDM0MsTUFBTU0sRUFBb0JKLEVBQUksRUFBR2MsRUFBWSxNQUFNLEVBQzdDSyxFQUFzQkosRUFBZVgsQ0FBaUIsRUFDdERnQixFQUEyQk4sRUFBWVYsQ0FBaUIsSUFBTSxJQUM5RGlCLEVBQWUsSUFBTSxLQUFLLElBQUssRUFBR0wsRUFHeEMsSUFGb0MsSUFBTUssRUFBWSxHQUFNRixHQUUzQixHQUFJQyxFQUlwQyxHQUFJLEVBRkhOLEVBQVlWLENBQWlCLElBQU1TLEVBQUtULENBQWlCLEdBR3pEVSxFQUFZVixDQUFpQixFQUFJUyxFQUFLVCxDQUFpQixNQUNuRCxlQUVMVSxFQUFZVixDQUFpQixFQUFJSCxFQUFpQixFQUduRCxNQUFNcUIsRUFBZ0JSLEVBQVksS0FBSyxFQUFFLEVBQ3pDRixFQUFZLFVBQVlVLEVBRXhCLE1BQU1DLEVBQXFCRCxJQUFrQlQsRUFFdkNXLEVBQWlCaEIsRUFBUSxpQkFDNUIsS0FBSyxNQUFNYSxFQUFjLEVBQUcsR0FBRyxFQUMvQixFQUlILEdBRkEsTUFBTUksRUFBTUQsQ0FBYyxFQUV0QkQsRUFBb0IsQ0FDdkJaLEVBQVMsRUFDVCxLQUNBLENBQ0QsQ0FFREMsRUFBWSxVQUFZQyxDQUMzQixDQUFHLENBQ0gsQ0FBRSxFQUVETCxFQUFRLFNBQVMsTUFBTSxFQUVoQixDQUNOLFFBQVMsQ0FBRSxFQUNYLFNBQVUsQ0FBRSxDQUNaLENBQ0YiLCJ4X2dvb2dsZV9pZ25vcmVMaXN0IjpbMCwxLDJdfQ==
