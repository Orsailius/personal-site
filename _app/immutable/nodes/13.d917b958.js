var N=Object.defineProperty;var V=(n,t,e)=>t in n?N(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var s=(n,t,e)=>(V(n,typeof t!="symbol"?t+"":t,e),e);import{S as R,i as W,s as j,C as Y,k as _,l as k,m as S,h as m,n as x,b as O,U as G,E as J,F as X,G as K,V as Q,g as B,d as F,a as z,q as U,y as Z,O as $,c as L,r as q,z as tt,p as P,D as w,A as et,B as it,o as st,L as nt,H as ot,w as at}from"../chunks/index.d9fb27cb.js";const rt=!0,Et=Object.freeze(Object.defineProperty({__proto__:null,prerender:rt},Symbol.toStringTag,{value:"Module"}));function M(n){return Math.abs(Math.floor(n))}function v(n,t){return Math.random()*(t-n)+n}function g(n,t){return Math.floor(v(n,t+1))}function D(n,t,e,i){const a=Math.pow;return Math.sqrt(a(n-e,2)+a(t-i,2))}function C(n,t,e=1){if(n>360||n<0)throw new Error(`Expected hue 0-360 range, got \`${n}\``);if(t>100||t<0)throw new Error(`Expected lightness 0-100 range, got \`${t}\``);if(e>1||e<0)throw new Error(`Expected alpha 0-1 range, got \`${e}\``);return`hsla(${n}, 100%, ${t}%, ${e})`}const I=n=>{if(typeof n=="object"&&n!==null){if(typeof Object.getPrototypeOf=="function"){const t=Object.getPrototypeOf(n);return t===Object.prototype||t===null}return Object.prototype.toString.call(n)==="[object Object]"}return!1},ht=["__proto__","constructor","prototype"],H=(...n)=>n.reduce((t,e)=>(Object.keys(e).forEach(i=>{ht.includes(i)||(Array.isArray(t[i])&&Array.isArray(e[i])?t[i]=e[i]:I(t[i])&&I(e[i])?t[i]=H(t[i],e[i]):t[i]=e[i])}),t),{});function ct(n,t){let e;return(...i)=>{e&&clearTimeout(e),e=setTimeout(()=>n(...i),t)}}class lt{constructor({x:t,y:e,ctx:i,hue:a,decay:c,gravity:l,friction:r,brightness:o,flickering:h,lineWidth:f,explosionLength:u}){s(this,"x");s(this,"y");s(this,"ctx");s(this,"hue");s(this,"friction");s(this,"gravity");s(this,"flickering");s(this,"lineWidth");s(this,"explosionLength");s(this,"angle");s(this,"speed");s(this,"brightness");s(this,"coordinates",[]);s(this,"decay");s(this,"alpha",1);for(this.x=t,this.y=e,this.ctx=i,this.hue=a,this.gravity=l,this.friction=r,this.flickering=h,this.lineWidth=f,this.explosionLength=u,this.angle=v(0,Math.PI*2),this.speed=g(1,10),this.brightness=g(o.min,o.max),this.decay=v(c.min,c.max);this.explosionLength--;)this.coordinates.push([t,e])}update(t){this.coordinates.pop(),this.coordinates.unshift([this.x,this.y]),this.speed*=this.friction,this.x+=Math.cos(this.angle)*this.speed,this.y+=Math.sin(this.angle)*this.speed+this.gravity,this.alpha-=this.decay,this.alpha<=this.decay&&t()}draw(){const t=this.coordinates.length-1;this.ctx.beginPath(),this.ctx.lineWidth=this.lineWidth,this.ctx.fillStyle=C(this.hue,this.brightness,this.alpha),this.ctx.moveTo(this.coordinates[t][0],this.coordinates[t][1]),this.ctx.lineTo(this.x,this.y),this.ctx.strokeStyle=C(this.hue,this.flickering?v(0,this.brightness):this.brightness,this.alpha),this.ctx.stroke()}}class ut{constructor(t,e){s(this,"active",!1);s(this,"x");s(this,"y");this.options=t,this.canvas=e,this.pointerDown=this.pointerDown.bind(this),this.pointerUp=this.pointerUp.bind(this),this.pointerMove=this.pointerMove.bind(this)}get mouseOptions(){return this.options.mouse}mount(){this.canvas.addEventListener("pointerdown",this.pointerDown),this.canvas.addEventListener("pointerup",this.pointerUp),this.canvas.addEventListener("pointermove",this.pointerMove)}unmount(){this.canvas.removeEventListener("pointerdown",this.pointerDown),this.canvas.removeEventListener("pointerup",this.pointerUp),this.canvas.removeEventListener("pointermove",this.pointerMove)}usePointer(t,e){const{click:i,move:a}=this.mouseOptions;(i||a)&&(this.x=t.pageX-this.canvas.offsetLeft,this.y=t.pageY-this.canvas.offsetTop,this.active=e)}pointerDown(t){this.usePointer(t,this.mouseOptions.click)}pointerUp(t){this.usePointer(t,!1)}pointerMove(t){this.usePointer(t,this.active)}}class dt{constructor(){s(this,"hue");s(this,"rocketsPoint");s(this,"opacity");s(this,"acceleration");s(this,"friction");s(this,"gravity");s(this,"particles");s(this,"explosion");s(this,"mouse");s(this,"boundaries");s(this,"sound");s(this,"delay");s(this,"brightness");s(this,"decay");s(this,"flickering");s(this,"intensity");s(this,"traceLength");s(this,"traceSpeed");s(this,"lineWidth");s(this,"lineStyle");s(this,"autoresize");this.autoresize=!0,this.lineStyle="round",this.flickering=50,this.traceLength=3,this.traceSpeed=10,this.intensity=30,this.explosion=5,this.gravity=1.5,this.opacity=.5,this.particles=50,this.friction=.95,this.acceleration=1.05,this.hue={min:0,max:360},this.rocketsPoint={min:50,max:50},this.lineWidth={explosion:{min:1,max:3},trace:{min:1,max:2}},this.mouse={click:!1,move:!1,max:1},this.delay={min:30,max:60},this.brightness={min:50,max:80},this.decay={min:.015,max:.03},this.sound={enabled:!1,files:["explosion0.mp3","explosion1.mp3","explosion2.mp3"],volume:{min:4,max:8}},this.boundaries={debug:!1,height:0,width:0,x:50,y:50}}update(t){Object.assign(this,H(this,t))}}class pt{constructor(t,e){s(this,"tick",0);s(this,"rafId",0);s(this,"fps",60);s(this,"tolerance",.1);s(this,"now");this.options=t,this.render=e}mount(){this.now=performance.now();const t=1e3/this.fps,e=i=>{this.rafId=requestAnimationFrame(e);const a=i-this.now;a>=t-this.tolerance&&(this.render(),this.now=i-a%t,this.tick+=a*(this.options.intensity*Math.PI)/1e3)};this.rafId=requestAnimationFrame(e)}unmount(){cancelAnimationFrame(this.rafId)}}class ft{constructor(t,e,i){s(this,"resizer");this.options=t,this.updateSize=e,this.container=i}mount(){if(!this.resizer){const t=ct(()=>this.updateSize(),100);this.resizer=new ResizeObserver(t)}this.options.autoresize&&this.resizer.observe(this.container)}unmount(){this.resizer&&this.resizer.unobserve(this.container)}}class mt{constructor(t){s(this,"buffers",[]);s(this,"audioContext");s(this,"onInit",!1);this.options=t,this.init()}get isEnabled(){return this.options.sound.enabled}get soundOptions(){return this.options.sound}init(){!this.onInit&&this.isEnabled&&(this.onInit=!0,this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.loadSounds())}async loadSounds(){for(const t of this.soundOptions.files){const e=await(await fetch(t)).arrayBuffer();this.audioContext.decodeAudioData(e).then(i=>{this.buffers.push(i)}).catch(i=>{throw i})}}play(){if(this.isEnabled&&this.buffers.length){const t=this.audioContext.createBufferSource(),e=this.buffers[g(0,this.buffers.length-1)],i=this.audioContext.createGain();t.buffer=e,i.gain.value=v(this.soundOptions.volume.min/100,this.soundOptions.volume.max/100),i.connect(this.audioContext.destination),t.connect(i),t.start(0)}else this.init()}}class gt{constructor({x:t,y:e,dx:i,dy:a,ctx:c,hue:l,speed:r,traceLength:o,acceleration:h}){s(this,"x");s(this,"y");s(this,"sx");s(this,"sy");s(this,"dx");s(this,"dy");s(this,"ctx");s(this,"hue");s(this,"speed");s(this,"acceleration");s(this,"traceLength");s(this,"totalDistance");s(this,"angle");s(this,"brightness");s(this,"coordinates",[]);s(this,"currentDistance",0);for(this.x=t,this.y=e,this.sx=t,this.sy=e,this.dx=i,this.dy=a,this.ctx=c,this.hue=l,this.speed=r,this.traceLength=o,this.acceleration=h,this.totalDistance=D(t,e,i,a),this.angle=Math.atan2(a-e,i-t),this.brightness=g(50,70);this.traceLength--;)this.coordinates.push([t,e])}update(t){this.coordinates.pop(),this.coordinates.unshift([this.x,this.y]),this.speed*=this.acceleration;const e=Math.cos(this.angle)*this.speed,i=Math.sin(this.angle)*this.speed;this.currentDistance=D(this.sx,this.sy,this.x+e,this.y+i),this.currentDistance>=this.totalDistance?t(this.dx,this.dy,this.hue):(this.x+=e,this.y+=i)}draw(){const t=this.coordinates.length-1;this.ctx.beginPath(),this.ctx.moveTo(this.coordinates[t][0],this.coordinates[t][1]),this.ctx.lineTo(this.x,this.y),this.ctx.strokeStyle=C(this.hue,this.brightness),this.ctx.stroke()}}class xt{constructor(t,e={}){s(this,"target");s(this,"container");s(this,"canvas");s(this,"ctx");s(this,"width");s(this,"height");s(this,"traces",[]);s(this,"explosions",[]);s(this,"waitStopRaf");s(this,"running",!1);s(this,"opts");s(this,"sound");s(this,"resize");s(this,"mouse");s(this,"raf");this.target=t,this.container=t,this.opts=new dt,this.createCanvas(this.target),this.updateOptions(e),this.sound=new mt(this.opts),this.resize=new ft(this.opts,this.updateSize.bind(this),this.container),this.mouse=new ut(this.opts,this.canvas),this.raf=new pt(this.opts,this.render.bind(this))}get isRunning(){return this.running}get version(){return"2.10.7"}get currentOptions(){return this.opts}start(){this.running||(this.canvas.isConnected||this.createCanvas(this.target),this.running=!0,this.resize.mount(),this.mouse.mount(),this.raf.mount())}stop(t=!1){!this.running||(this.running=!1,this.resize.unmount(),this.mouse.unmount(),this.raf.unmount(),this.clear(),t&&this.canvas.remove())}async waitStop(t){if(this.running)return new Promise(e=>{this.waitStopRaf=()=>{!this.waitStopRaf||(requestAnimationFrame(this.waitStopRaf),!this.traces.length&&!this.explosions.length&&(this.waitStopRaf=null,this.stop(t),e()))},this.waitStopRaf()})}pause(){this.running=!this.running,this.running?this.raf.mount():this.raf.unmount()}clear(){!this.ctx||(this.traces=[],this.explosions=[],this.ctx.clearRect(0,0,this.width,this.height))}launch(t=1){for(let e=0;e<t;e++)this.createTrace();this.waitStopRaf||(this.start(),this.waitStop())}updateOptions(t){this.opts.update(t)}updateSize({width:t=this.container.clientWidth,height:e=this.container.clientHeight}={}){this.width=t,this.height=e,this.canvas.width=t,this.canvas.height=e,this.updateBoundaries({...this.opts.boundaries,width:t,height:e})}updateBoundaries(t){this.updateOptions({boundaries:t})}createCanvas(t){t instanceof HTMLCanvasElement?(t.isConnected||document.body.append(t),this.canvas=t):(this.canvas=document.createElement("canvas"),this.container.append(this.canvas)),this.ctx=this.canvas.getContext("2d"),this.updateSize()}render(){if(!this.ctx||!this.running)return;const{opacity:t,lineStyle:e,lineWidth:i}=this.opts;this.ctx.globalCompositeOperation="destination-out",this.ctx.fillStyle=`rgba(0, 0, 0, ${t})`,this.ctx.fillRect(0,0,this.width,this.height),this.ctx.globalCompositeOperation="lighter",this.ctx.lineCap=e,this.ctx.lineJoin="round",this.ctx.lineWidth=v(i.trace.min,i.trace.max),this.initTrace(),this.drawTrace(),this.drawExplosion()}createTrace(){const{hue:t,rocketsPoint:e,boundaries:i,traceLength:a,traceSpeed:c,acceleration:l,mouse:r}=this.opts;this.traces.push(new gt({x:this.width*g(e.min,e.max)/100,y:this.height,dx:this.mouse.x&&r.move||this.mouse.active?this.mouse.x:g(i.x,i.width-i.x*2),dy:this.mouse.y&&r.move||this.mouse.active?this.mouse.y:g(i.y,i.height*.5),ctx:this.ctx,hue:g(t.min,t.max),speed:c,acceleration:l,traceLength:M(a)}))}initTrace(){if(this.waitStopRaf)return;const{delay:t,mouse:e}=this.opts;(this.raf.tick>g(t.min,t.max)||this.mouse.active&&e.max>this.traces.length)&&(this.createTrace(),this.raf.tick=0)}drawTrace(){let t=this.traces.length;for(;t--;)this.traces[t].draw(),this.traces[t].update((e,i,a)=>{this.initExplosion(e,i,a),this.sound.play(),this.traces.splice(t,1)})}initExplosion(t,e,i){const{particles:a,flickering:c,lineWidth:l,explosion:r,brightness:o,friction:h,gravity:f,decay:u}=this.opts;let d=M(a);for(;d--;)this.explosions.push(new lt({x:t,y:e,ctx:this.ctx,hue:i,friction:h,gravity:f,flickering:g(0,100)<=c,lineWidth:v(l.explosion.min,l.explosion.max),explosionLength:M(r),brightness:o,decay:u}))}drawExplosion(){let t=this.explosions.length;for(;t--;)this.explosions[t].draw(),this.explosions[t].update(()=>{this.explosions.splice(t,1)})}}function yt(n){let t,e,i,a,c;const l=n[7].default,r=Y(l,n,n[6],null);return{c(){t=_("div"),r&&r.c(),this.h()},l(o){t=k(o,"DIV",{class:!0,style:!0});var h=S(t);r&&r.l(h),h.forEach(m),this.h()},h(){x(t,"class",n[0]),x(t,"style",n[1])},m(o,h){O(o,t,h),r&&r.m(t,null),i=!0,a||(c=G(e=n[3].call(null,t,n[2])),a=!0)},p(o,[h]){r&&r.p&&(!i||h&64)&&J(r,l,o,o[6],i?K(l,o[6],h,null):X(o[6]),null),(!i||h&1)&&x(t,"class",o[0]),(!i||h&2)&&x(t,"style",o[1]),e&&Q(e.update)&&h&4&&e.update.call(null,o[2])},i(o){i||(B(r,o),i=!0)},o(o){F(r,o),i=!1},d(o){o&&m(t),r&&r.d(o),a=!1,c()}}}function wt(n,t,e){let{$$slots:i={},$$scope:a}=t,{class:c=""}=t,{autostart:l=!0}=t,{style:r=""}=t,{options:o={}}=t,h;function f(){return h}function u(d,p){return h=new xt(d,p),l&&h.start(),{update(y){h.updateOptions(y)},destroy(){h.stop()}}}return n.$$set=d=>{"class"in d&&e(0,c=d.class),"autostart"in d&&e(4,l=d.autostart),"style"in d&&e(1,r=d.style),"options"in d&&e(2,o=d.options),"$$scope"in d&&e(6,a=d.$$scope)},[c,r,o,u,l,f,a,i]}class vt extends R{constructor(t){super(),W(this,t,wt,yt,j,{class:0,autostart:4,style:1,options:2,fireworksInstance:5})}get fireworksInstance(){return this.$$.ctx[5]}}function A(n){let t,e,i,a;return{c(){t=_("button"),e=U("Start!"),this.h()},l(c){t=k(c,"BUTTON",{class:!0});var l=S(t);e=q(l,"Start!"),l.forEach(m),this.h()},h(){x(t,"class","btn btn-primary btn-lg")},m(c,l){O(c,t,l),w(t,e),i||(a=nt(t,"click",n[3]),i=!0)},p:ot,d(c){c&&m(t),i=!1,a()}}}function bt(n){let t,e,i,a,c,l,r,o,h,f,u=!n[1]&&A(n),d={options:n[2],class:"fireworks",style:"min-height:80vh"};return h=new vt({props:d}),n[4](h),{c(){t=_("meta"),e=z(),i=_("div"),a=_("h1"),c=U("Ring in the New Year"),l=z(),r=_("div"),u&&u.c(),o=z(),Z(h.$$.fragment),this.h()},l(p){const y=$("svelte-1wzcec2",document.head);t=k(y,"META",{name:!0,content:!0}),y.forEach(m),e=L(p),i=k(p,"DIV",{class:!0,style:!0});var b=S(i);a=k(b,"H1",{class:!0});var T=S(a);c=q(T,"Ring in the New Year"),T.forEach(m),l=L(b),r=k(b,"DIV",{class:!0,style:!0});var E=S(r);u&&u.l(E),o=L(E),tt(h.$$.fragment,E),E.forEach(m),b.forEach(m),this.h()},h(){document.title="Fireworks",x(t,"name","description"),x(t,"content","Ring in the new year with some audio based Fireworks!"),x(a,"class","text-4xl pt-8 font-semibold text-center"),x(r,"class","flex flex-col place-content-center m-2 mr-2"),P(r,"min-height","80vh"),x(i,"class","bg-base-100 h-full "),P(i,"min-height","92vh")},m(p,y){w(document.head,t),O(p,e,y),O(p,i,y),w(i,a),w(a,c),w(i,l),w(i,r),u&&u.m(r,null),w(r,o),et(h,r,null),f=!0},p(p,[y]){p[1]?u&&(u.d(1),u=null):u?u.p(p,y):(u=A(p),u.c(),u.m(r,o));const b={};h.$set(b)},i(p){f||(B(h.$$.fragment,p),f=!0)},o(p){F(h.$$.fragment,p),f=!1},d(p){m(t),p&&m(e),p&&m(i),u&&u.d(),n[4](null),it(h)}}}function _t(n,t,e){let i,a={autoresize:!0,opacity:.5,acceleration:1.05,friction:.97,gravity:1.5,particles:50,traceLength:3,traceSpeed:10,explosion:5,intensity:30,flickering:50,lineStyle:"round",hue:{min:0,max:360},delay:{min:30,max:50},rocketsPoint:{min:33,max:66},lineWidth:{explosion:{min:1,max:5},trace:{min:1,max:4}},brightness:{min:50,max:80},decay:{min:.015,max:.03},mouse:{click:!0,move:!1,max:10}},c=!1;st(()=>{i.fireworksInstance().stop(!1)});async function l(){console.log("Pressed Start"),e(1,c=!0);let o=new AudioContext;const f=await(await fetch("/audio/newyears1.mp3")).arrayBuffer();o.decodeAudioData(f,async u=>{i.fireworksInstance().start();const d=o.createBufferSource();d.buffer=u,d.loop=!0,d.connect(o.destination),d.start()})}function r(o){at[o?"unshift":"push"](()=>{i=o,e(0,i)})}return[i,c,a,l,r]}class Ot extends R{constructor(t){super(),W(this,t,_t,bt,j,{})}}export{Ot as component,Et as universal};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
