var m=Object.defineProperty;var p=(r,e,n)=>e in r?m(r,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):r[e]=n;var i=(r,e,n)=>(p(r,typeof e!="symbol"?e+"":e,n),n);import{S as f,i as _,s as v,k as u,a as g,O as w,l as h,h as s,c as y,m as S,n as l,D as j,b as z,H as c}from"../chunks/index.db517901.js";const x=!0,M=Object.freeze(Object.defineProperty({__proto__:null,prerender:x},Symbol.toStringTag,{value:"Module"}));function E(r){let e,n,t;return{c(){e=u("meta"),n=g(),t=u("div"),this.h()},l(a){const o=w("svelte-1fn024j",document.head);e=h(o,"META",{name:!0,content:!0}),o.forEach(s),n=y(a),t=h(a,"DIV",{class:!0});var d=S(t);d.forEach(s),this.h()},h(){document.title="Antizero",l(e,"name","description"),l(e,"content","Antizero"),l(t,"class","bg-base-100")},m(a,o){j(document.head,e),z(a,n,o),z(a,t,o)},p:c,i:c,o:c,d(a){s(e),a&&s(n),a&&s(t)}}}function O(r){class e{constructor(t=0,a=0,o=0){i(this,"natural",0);i(this,"zero",0);i(this,"antizero",0);this.natural=t,this.zero=a,this.antizero=o}mult(t){var a=new e;return a.natural=(this.natural*t.natural+this.zero*t.antizero+this.antizero*t.zero)%3,a.zero=(this.natural*t.zero+this.zero*t.natural+this.zero*t.zero)%3,a.antizero=(this.natural*t.antizero+this.antizero*t.antizero+this.antizero*t.natural)%3,a}add(t){var a=new e;return a.natural=(this.natural+t.natural)%3,a.zero=(t.zero+this.zero)%3,a.antizero=(t.antizero+this.antizero)%3,a}}return console.log(new e(1,0,2).mult(new e(2,1,1)).add(new e(1,0,1))),[]}class P extends f{constructor(e){super(),_(this,e,O,E,v,{})}}export{P as component,M as universal};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi4zNzE4YjNiYi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcy9hbnRpemVyby8rcGFnZS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXMvYW50aXplcm8vK3BhZ2Uuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRldiB9IGZyb20gJyRhcHAvZW52aXJvbm1lbnQnO1xyXG5cclxuLy8gc2luY2UgdGhlcmUncyBubyBkeW5hbWljIGRhdGEgaGVyZSwgd2UgY2FuIHByZXJlbmRlclxyXG4vLyBpdCBzbyB0aGF0IGl0IGdldHMgc2VydmVkIGFzIGEgc3RhdGljIGFzc2V0IGluIHByb2R1Y3Rpb25cclxuZXhwb3J0IGNvbnN0IHByZXJlbmRlciA9IHRydWU7XHJcbiIsIjxzY3JpcHQgbGFuZz1cInRzXCI+XHJcblxyXG5jbGFzcyBBbnRpWmVyb1ZhcjxFIGV4dGVuZHMgTnVtYmVyPlxyXG57XHJcbiAgICBuYXR1cmFsOiBFIHwgMCA9IDA7XHJcbiAgICB6ZXJvOiBFIHwgMCA9IDA7XHJcbiAgICBhbnRpemVybzogRSB8IDAgPSAwO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG5hdHVyYWw6RXwgMCA9MCwgemVybzpFfCAwID0wLCBhbnRpemVybzpFfCAwID0wKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMubmF0dXJhbCA9IG5hdHVyYWw7XHJcbiAgICAgICAgdGhpcy56ZXJvID0gemVybztcclxuICAgICAgICB0aGlzLmFudGl6ZXJvID0gYW50aXplcm87XHJcbiAgICB9XHJcblxyXG4gICAgbXVsdChiOkFudGlaZXJvVmFyPEU+KSA6IEFudGlaZXJvVmFyPEU+XHJcbiAgICB7XHJcbiAgICAgICAgdmFyIGF6djogQW50aVplcm9WYXI8RT4gPSBuZXcgQW50aVplcm9WYXIoKTtcclxuICAgICAgICBhenYubmF0dXJhbCA9ICh0aGlzLm5hdHVyYWwgKiBiLm5hdHVyYWwgKyB0aGlzLnplcm8gKiBiLmFudGl6ZXJvICsgdGhpcy5hbnRpemVybyAqIGIuemVybyklIDMgYXMgdW5rbm93biBhcyBFO1xyXG4gICAgICAgIGF6di56ZXJvID0gKHRoaXMubmF0dXJhbCAqIGIuemVybyArIHRoaXMuemVybyAqIGIubmF0dXJhbCArIHRoaXMuemVybyAqIGIuemVybyklIDMgYXMgdW5rbm93biBhcyBFO1xyXG4gICAgICAgIGF6di5hbnRpemVybyA9ICh0aGlzLm5hdHVyYWwgKiBiLmFudGl6ZXJvICsgdGhpcy5hbnRpemVybyAqIGIuYW50aXplcm8gKyB0aGlzLmFudGl6ZXJvICogYi5uYXR1cmFsKSUgMyBhcyB1bmtub3duIGFzIEU7XHJcbiAgICAgICAgcmV0dXJuIGF6djtcclxuICAgIH1cclxuXHJcbiAgICBhZGQoYjpBbnRpWmVyb1ZhcjxFPikgOiBBbnRpWmVyb1ZhcjxFPlxyXG4gICAge1xyXG4gICAgICAgIHZhciBhenY6IEFudGlaZXJvVmFyPEU+ID0gbmV3IEFudGlaZXJvVmFyKCk7XHJcbiAgICAgICAgYXp2Lm5hdHVyYWwgPSAodGhpcy5uYXR1cmFsICsgYi5uYXR1cmFsKSUgMyBhcyB1bmtub3duIGFzIEU7XHJcbiAgICAgICAgYXp2Lnplcm8gPSAoYi56ZXJvICsgdGhpcy56ZXJvKSUgMyBhcyB1bmtub3duIGFzIEU7XHJcbiAgICAgICAgYXp2LmFudGl6ZXJvID0gKGIuYW50aXplcm8gKyB0aGlzLmFudGl6ZXJvKSUgMyBhcyB1bmtub3duIGFzIEU7XHJcbiAgICAgICAgcmV0dXJuIGF6djtcclxuICAgIH1cclxufVxyXG5cclxudHlwZSBGM0dyb3VwID0gMSB8IDI7XHJcblxyXG5jb25zb2xlLmxvZyhuZXcgQW50aVplcm9WYXIoMSwwLDIpLm11bHQobmV3IEFudGlaZXJvVmFyKDIsMSwxKSkuYWRkKG5ldyBBbnRpWmVyb1ZhcigxLDAsMSkpKTtcclxuXHJcbjwvc2NyaXB0PlxyXG5cclxuPHN2ZWx0ZTpoZWFkPlxyXG5cdDx0aXRsZT5BbnRpemVybzwvdGl0bGU+XHJcblx0PG1ldGEgbmFtZT1cImRlc2NyaXB0aW9uXCIgY29udGVudD1cIkFudGl6ZXJvXCIgLz5cclxuPC9zdmVsdGU6aGVhZD5cclxuXHJcbjxkaXYgY2xhc3M9XCJiZy1iYXNlLTEwMFwiPlxyXG5cdFxyXG48L2Rpdj5cclxuXHJcbjxzdHlsZT5cclxuXHRcclxuXHJcblxyXG48L3N0eWxlPlxyXG4iXSwibmFtZXMiOlsicHJlcmVuZGVyIiwiYXBwZW5kX2h5ZHJhdGlvbiIsIm1ldGEiLCJpbnNlcnRfaHlkcmF0aW9uIiwidGFyZ2V0IiwiZGl2IiwiYW5jaG9yIiwiQW50aVplcm9WYXIiLCJuYXR1cmFsIiwiemVybyIsImFudGl6ZXJvIiwiX19wdWJsaWNGaWVsZCIsImIiLCJhenYiXSwibWFwcGluZ3MiOiJtVEFJTyxNQUFNQSxFQUFZLDJjQ3NDeEJDLEVBQThDLFNBQUEsS0FBQUMsQ0FBQSxXQUcvQ0MsRUFFTUMsRUFBQUMsRUFBQUMsQ0FBQSwrREE3Q0FDLENBQUEsQ0FNRixZQUFZQyxFQUFjLEVBQUdDLEVBQVcsRUFBR0MsRUFBZSxFQUFBLENBSjFEQyxFQUFBLGVBQWlCLEdBQ2pCQSxFQUFBLFlBQWMsR0FDZEEsRUFBQSxnQkFBa0IsR0FJZCxLQUFLLFFBQVVILEVBQ2YsS0FBSyxLQUFPQyxFQUNaLEtBQUssU0FBV0MsRUFHcEIsS0FBS0UsRUFBQSxDQUVHLElBQUFDLE1BQTBCTixFQUM5QixPQUFBTSxFQUFJLFNBQVcsS0FBSyxRQUFVRCxFQUFFLFFBQVUsS0FBSyxLQUFPQSxFQUFFLFNBQVcsS0FBSyxTQUFXQSxFQUFFLE1BQU8sRUFDNUZDLEVBQUksTUFBUSxLQUFLLFFBQVVELEVBQUUsS0FBTyxLQUFLLEtBQU9BLEVBQUUsUUFBVSxLQUFLLEtBQU9BLEVBQUUsTUFBTyxFQUNqRkMsRUFBSSxVQUFZLEtBQUssUUFBVUQsRUFBRSxTQUFXLEtBQUssU0FBV0EsRUFBRSxTQUFXLEtBQUssU0FBV0EsRUFBRSxTQUFVLEVBQzlGQyxFQUdYLElBQUlELEVBQUEsQ0FFSSxJQUFBQyxNQUEwQk4sRUFDOUIsT0FBQU0sRUFBSSxTQUFXLEtBQUssUUFBVUQsRUFBRSxTQUFVLEVBQzFDQyxFQUFJLE1BQVFELEVBQUUsS0FBTyxLQUFLLE1BQU8sRUFDakNDLEVBQUksVUFBWUQsRUFBRSxTQUFXLEtBQUssVUFBVyxFQUN0Q0MsR0FNZixlQUFRLElBQVEsSUFBQU4sRUFBWSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEtBQVMsSUFBQUEsRUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFHLEVBQUEsSUFBUSxJQUFBQSxFQUFZLEVBQUUsRUFBRSxDQUFDLENBQUEsQ0FBQSJ9
