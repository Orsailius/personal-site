var ie=Object.defineProperty;var oe=(n,e,s)=>e in n?ie(n,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[e]=s;var A=(n,e,s)=>(oe(n,typeof e!="symbol"?e+"":e,s),s);import{S as le,i as ae,s as ne,k as g,l as y,m as k,h as f,n as u,K as S,b as W,L as z,H as T,J as ue,M as re,e as Y,q as B,a as G,r as H,c as L,D as _,u as R,a6 as ce,a7 as fe,R as Z,y as de,O as _e,z as he,p as P,a0 as $,A as me,g as pe,d as ge,B as ye}from"../chunks/index.d9fb27cb.js";import{g as ve}from"../chunks/main.709fbbde.js";const ke=!0,Ae=Object.freeze(Object.defineProperty({__proto__:null,prerender:ke},Symbol.toStringTag,{value:"Module"}));class ee{constructor(){A(this,"contentList",[]);A(this,"workingContent");A(this,"styleGroups",new Map);A(this,"workingStyleGroup");A(this,"lastWasContent",!0)}applyStyleGroups(){var e;for(const s of this.styleGroups)if(s[0]=="!all!")for(const a of this.contentList)s[1].classes!=null?a.classes+=" "+s[1].classes:a.classes=s[1].classes,s[1].style!=null&&(a.style==null?a.style=s[1].style:a.style+=s[1].style);else for(const a of this.contentList){if(a.classes==null)continue;a.classes.split(" ").indexOf(s[0])>=0&&(s[1].classes!=null&&(a.classes=(e=a.classes)==null?void 0:e.replace(s[0],s[1].classes)),s[1].style!=null&&(a.style==null?a.style=s[1].style:a.style+=s[1].style))}}pushWorking(){this.workingContent!=null&&(this.contentList.push(this.workingContent),console.log(this.contentList)),this.lastWasContent=!0}addStyleGroup(e){this.workingStyleGroup={id:e},this.styleGroups.set(e,this.workingStyleGroup),this.lastWasContent=!1}assignStyle(e){this.lastWasContent?this.workingContent.style=e:this.workingStyleGroup.style=e}assignClasses(e){this.lastWasContent?this.workingContent.classes=e:this.workingStyleGroup.classes=e}}var D=(n=>(n[n.Text=0]="Text",n[n.Button=1]="Button",n[n.Image=2]="Image",n[n.Link=3]="Link",n[n.Html=4]="Html",n[n.Group=5]="Group",n[n.All=6]="All",n))(D||{});function te(n,e,s){const a=n.slice();return a[4]=e[s],a}function be(n){let e,s=n[4].payload+"",a,i,t,r;return{c(){e=g("div"),a=B(s),i=G(),this.h()},l(o){e=y(o,"DIV",{class:!0,style:!0});var l=k(e);a=H(l,s),i=L(l),l.forEach(f),this.h()},h(){u(e,"class",t=S("text-md text-center "+n[4].classes)+" svelte-2kuin7"),u(e,"style",r=n[4].style)},m(o,l){W(o,e,l),_(e,a),_(e,i)},p(o,l){l&1&&s!==(s=o[4].payload+"")&&R(a,s),l&1&&t!==(t=S("text-md text-center "+o[4].classes)+" svelte-2kuin7")&&u(e,"class",t),l&1&&r!==(r=o[4].style)&&u(e,"style",r)},d(o){o&&f(e)}}}function Se(n){let e,s=n[4].payload.text+"",a,i,t,r,o;return{c(){e=g("a"),a=B(s),i=G(),this.h()},l(l){e=y(l,"A",{class:!0,style:!0,href:!0});var c=k(e);a=H(c,s),i=L(c),c.forEach(f),this.h()},h(){u(e,"class",t=S("text-md text-center "+n[4].classes)+" svelte-2kuin7"),u(e,"style",r=n[4].style),u(e,"href",o=n[4].payload.link)},m(l,c){W(l,e,c),_(e,a),_(e,i)},p(l,c){c&1&&s!==(s=l[4].payload.text+"")&&R(a,s),c&1&&t!==(t=S("text-md text-center "+l[4].classes)+" svelte-2kuin7")&&u(e,"class",t),c&1&&r!==(r=l[4].style)&&u(e,"style",r),c&1&&o!==(o=l[4].payload.link)&&u(e,"href",o)},d(l){l&&f(e)}}}function xe(n){let e,s=n[4].payload.text+"",a,i,t,r,o;return{c(){e=g("a"),a=B(s),i=G(),this.h()},l(l){e=y(l,"A",{class:!0,style:!0,href:!0});var c=k(e);a=H(c,s),i=L(c),c.forEach(f),this.h()},h(){u(e,"class",t=S("btn btn-success text-md text-center "+n[4].classes)+" svelte-2kuin7"),u(e,"style",r="text-decoration:none; "+n[4].style),u(e,"href",o=n[4].payload.link)},m(l,c){W(l,e,c),_(e,a),_(e,i)},p(l,c){c&1&&s!==(s=l[4].payload.text+"")&&R(a,s),c&1&&t!==(t=S("btn btn-success text-md text-center "+l[4].classes)+" svelte-2kuin7")&&u(e,"class",t),c&1&&r!==(r="text-decoration:none; "+l[4].style)&&u(e,"style",r),c&1&&o!==(o=l[4].payload.link)&&u(e,"href",o)},d(l){l&&f(e)}}}function Ce(n){let e,s,a=n[4].payload+"",i,t,r;return{c(){e=g("div"),s=new ce(!1),i=G(),this.h()},l(o){e=y(o,"DIV",{class:!0,style:!0});var l=k(e);s=fe(l,!1),i=L(l),l.forEach(f),this.h()},h(){s.a=i,u(e,"class",t=S("text-md text-center "+n[4].classes)+" svelte-2kuin7"),u(e,"style",r=n[4].style)},m(o,l){W(o,e,l),s.m(a,e),_(e,i)},p(o,l){l&1&&a!==(a=o[4].payload+"")&&s.p(a),l&1&&t!==(t=S("text-md text-center "+o[4].classes)+" svelte-2kuin7")&&u(e,"class",t),l&1&&r!==(r=o[4].style)&&u(e,"style",r)},d(o){o&&f(e)}}}function we(n){let e,s,a,i;return{c(){e=g("img"),this.h()},l(t){e=y(t,"IMG",{src:!0,alt:!0,class:!0,style:!0}),this.h()},h(){Z(e.src,s=n[4].payload)||u(e,"src",s),u(e,"alt",""),u(e,"class",a=S("text-md text-center "+n[4].classes)+" svelte-2kuin7"),u(e,"style",i=n[4].style)},m(t,r){W(t,e,r)},p(t,r){r&1&&!Z(e.src,s=t[4].payload)&&u(e,"src",s),r&1&&a!==(a=S("text-md text-center "+t[4].classes)+" svelte-2kuin7")&&u(e,"class",a),r&1&&i!==(i=t[4].style)&&u(e,"style",i)},d(t){t&&f(e)}}}function se(n){let e;function s(t,r){return t[4].type==D.Image?we:t[4].type==D.Html?Ce:t[4].type==D.Button?xe:t[4].type==D.Link?Se:be}let a=s(n),i=a(n);return{c(){i.c(),e=Y()},l(t){i.l(t),e=Y()},m(t,r){i.m(t,r),W(t,e,r)},p(t,r){a===(a=s(t))&&i?i.p(t,r):(i.d(1),i=a(t),i&&(i.c(),i.m(e.parentNode,e)))},d(t){i.d(t),t&&f(e)}}}function De(n){let e,s,a,i=n[0].contentList,t=[];for(let r=0;r<i.length;r+=1)t[r]=se(te(n,i,r));return{c(){e=g("div");for(let r=0;r<t.length;r+=1)t[r].c();this.h()},l(r){e=y(r,"DIV",{class:!0});var o=k(e);for(let l=0;l<t.length;l+=1)t[l].l(o);o.forEach(f),this.h()},h(){u(e,"class",S("route-card glass-shine-effect mb-8 outline outline-1 outline-white-300 rounded-xl flex flex-col p-4 gap-4 items-center justify-center text-white bg-blue-600")+" svelte-2kuin7")},m(r,o){W(r,e,o);for(let l=0;l<t.length;l+=1)t[l]&&t[l].m(e,null);s||(a=[z(e,"mouseenter",n[2]),z(e,"mouseleave",n[3])],s=!0)},p(r,[o]){if(o&1){i=r[0].contentList;let l;for(l=0;l<i.length;l+=1){const c=te(r,i,l);t[l]?t[l].p(c,o):(t[l]=se(c),t[l].c(),t[l].m(e,null))}for(;l<t.length;l+=1)t[l].d(1);t.length=i.length}},i:T,o:T,d(r){r&&f(e),ue(t,r),s=!1,re(a)}}}function Ie(n,e,s){let{madeCardData:a}=e,i=!1;const t=()=>s(1,i=!0),r=()=>s(1,i=!1);return n.$$set=o=>{"madeCardData"in o&&s(0,a=o.madeCardData)},[a,i,t,r]}class Ee extends le{constructor(e){super(),ae(this,e,Ie,De,ne,{madeCardData:0})}}function Ge(n){let e,s,a,i,t,r,o,l,c,b,x,v,h,d,m,V,M,C,w,j,N,U;return w=new Ee({props:{madeCardData:n[0]}}),{c(){e=g("meta"),s=G(),a=g("div"),i=g("div"),t=B("Make a Web Card"),r=G(),o=g("div"),l=B("Using a Domain Specific Language"),c=G(),b=g("div"),x=g("div"),v=g("textarea"),h=G(),d=g("div"),m=B(n[2]),V=G(),M=g("div"),C=g("div"),de(w.$$.fragment),this.h()},l(p){const I=_e("svelte-1gkdzcx",document.head);e=y(I,"META",{name:!0,content:!0}),I.forEach(f),s=L(p),a=y(p,"DIV",{class:!0,style:!0});var E=k(a);i=y(E,"DIV",{class:!0});var F=k(i);t=H(F,"Make a Web Card"),F.forEach(f),r=L(E),o=y(E,"DIV",{class:!0});var J=k(o);l=H(J,"Using a Domain Specific Language"),J.forEach(f),c=L(E),b=y(E,"DIV",{class:!0});var O=k(b);x=y(O,"DIV",{class:!0});var q=k(x);v=y(q,"TEXTAREA",{class:!0,style:!0,placeholder:!0}),k(v).forEach(f),h=L(q),d=y(q,"DIV",{});var K=k(d);m=H(K,n[2]),K.forEach(f),q.forEach(f),V=L(O),M=y(O,"DIV",{class:!0});var X=k(M);C=y(X,"DIV",{class:!0});var Q=k(C);he(w.$$.fragment,Q),Q.forEach(f),X.forEach(f),O.forEach(f),E.forEach(f),this.h()},h(){document.title="Card Maker Language",u(e,"name","description"),u(e,"content","About this app"),u(i,"class","text-4xl text-center font-semibold pt-8"),u(o,"class","text-sm text-center pb-8"),u(v,"class","textarea textarea-primary w-full"),P(v,"min-height","25rem"),P(v,"max-height","100rem"),u(v,"placeholder","Bio"),u(x,"class","flex flex-col w-1/2 bg-blue-100 items-center justify-center gap-2 p-8"),u(C,"class","flex items-center justify-center w-2/3 bg-white rounded-xl outline outline-4 outline-gray-200 p-4 m-4 pt-12"),u(M,"class","flex w-1/2 bg-yellow-100 items-center justify-center"),u(b,"class","flex"),u(a,"class","bg-base-100 h-full"),P(a,"min-height","92.25vh")},m(p,I){_(document.head,e),W(p,s,I),W(p,a,I),_(a,i),_(i,t),_(a,r),_(a,o),_(o,l),_(a,c),_(a,b),_(b,x),_(x,v),$(v,n[1]),_(x,h),_(x,d),_(d,m),_(b,V),_(b,M),_(M,C),me(w,C,null),j=!0,N||(U=[z(v,"input",n[4]),z(v,"input",n[3])],N=!0)},p(p,[I]){I&2&&$(v,p[1]),(!j||I&4)&&R(m,p[2]);const E={};I&1&&(E.madeCardData=p[0]),w.$set(E)},i(p){j||(pe(w.$$.fragment,p),j=!0)},o(p){ge(w.$$.fragment,p),j=!1},d(p){f(e),p&&f(s),p&&f(a),ye(w),N=!1,re(U)}}}function Le(n,e,s){const a=ve(String.raw`
    CardCreator {

    Exp
    = Stuff*
    
    Stuff
    = Content Class? Style?
    | Content Style? Class?

    Class
    = "[" (~"]" any )* "]"
    
    Style
    = "{" (~"}" any )* "}"
    
    Content
    = "\"" string "\"" --text
    | "image" "(" (~")" any )* ")" --image
    | "link"  "(" (~")" any )* ")"  "\"" string "\"" --link
    | "button"  "(" (~")" any )* ")"  "\"" string "\"" --button
    | "html" "("(~")" any )* ")" --html
    | "group" ident --group
    | "all" --all

    Capture
    = "<" ident ">"  

    ident  (an identifier)
    = letter alnum*
    
    string
        = (~"\"" any )+

    number  (a number)
    = digit* "." digit+  -- fract
    | digit+             -- whole
    }
    `),i=[`"Normal Text"
        "How are ya?" [outline rounded-xl font-semibold p-4 silly] {padding-top:25px;}
        button (/bahama) "Bahama Time!"
        image (/images/pkmn/Diablous1.jfif)
        link (/otv) "Otv"
        html (<input type="text" style="max-width:150px" class="text-center text-black"> 
            Enter text here </input>)
        group silly [text-2xl text-purple-400] {background-color: #0ff}
        all [mb-1]
        `];let t=new ee;const r=a.createSemantics();r.addOperation("eval",{_iter(...h){h.map(d=>d.evalInner())}}),r.addOperation("evalInner",{Stuff(h,d,m){h.evalInner(),d.evalInner(),m.evalInner()},_iter(...h){h.map(d=>d.evalInner())},Content_text(h,d,m){t.pushWorking(),s(0,t.workingContent={payload:d.sourceString,type:D.Text},t)},Content_button(h,d,m,V,M,C,w){t.pushWorking(),s(0,t.workingContent={payload:{text:C.sourceString,link:m.sourceString},type:D.Button},t)},Content_link(h,d,m,V,M,C,w){t.pushWorking(),s(0,t.workingContent={payload:{text:C.sourceString,link:m.sourceString},type:D.Link},t)},Content_image(h,d,m,V){t.pushWorking(),s(0,t.workingContent={payload:m.sourceString,type:D.Image},t)},Content_html(h,d,m,V){t.pushWorking(),s(0,t.workingContent={payload:m.sourceString,type:D.Html},t)},Content_group(h,d){t.addStyleGroup(d.sourceString)},Content_all(h){t.addStyleGroup("!all!")},Class(h,d,m){t.assignClasses(d.sourceString)},Style(h,d,m){t.assignStyle(d.sourceString)}});let o=i[0],l="";function c(){s(2,l="Building..."),s(0,t=new ee),o==null&&s(1,o="");let h=a.match(o);h.succeeded()?(s(2,l="Success"),r(h).eval(),t.pushWorking(),t.applyStyleGroups(),s(0,t)):s(2,l="Failure")}var b;function x(){clearTimeout(b),b=setTimeout(c,1e3)}c();function v(){o=this.value,s(1,o)}return[t,o,l,x,v]}class Be extends le{constructor(e){super(),ae(this,e,Le,Ge,ne,{})}}export{Be as component,Ae as universal};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
